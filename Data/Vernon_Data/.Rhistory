power=1-pf(w,4,5(n - 1))
#Questio 2, power calculations
a = 4
gamma = 1.2
n = c(3:10)
cv=qf(0.95,a-1,a*(n - 1))
w=cv/(1 + n*gamma)
power=1-pf(w,a-1,a*(n - 1))
powertable <- data.frame(n,power)
powertable
n = c(3:15)
cv=qf(0.95,a-1,a*(n - 1))
w=cv/(1 + n*gamma)
power=1-pf(w,a-1,a*(n - 1))
powertable <- data.frame(n,power)
powertable
?ptukey
?qt
?qt
qt(0.05,8*3)
qt(0.95,8*3)
1.711*(0.17/sqrt(4))
#Stat 404 Final review
se = 0.17/sqrt(4)
se
moe = qt(0.95,8*3)*se
moe
moe = qt(0.95,8)*se
moe
moe = qt(0.95,7)*se
moe
#Stat 404 Final review
se = 0.17/sqrt(4)
se
moe = qt(0.95,7)*se
moe
moe = qt(0.95,8*4)*se
moe
moe = qt(0.95,7*4)*se
moe
moe = qt(0.95,8)*se
moe
se
moe = qt(0.95,8)*se
moe
moe = qt(0.95,3)*se
moe
moe = qt(0.95,3-1)*se
moe
moe = qt(0.95,6*se
moe = qt(0.95,6)*se
moe
moe = qt(0.95,6*3)*se
moe
0.17544/0.085
8*3
moe = qt(0.95,8*3)*se
moe
qt(0.95,24)
qt(0.95,23)
qt(0.90,23)
qt(0.90,24)
qt(0.95,26)
moe = qt(0.975,8*3)*se
moe
se2 = 0.17/sqrt(1)
se2
se2 = 0.17/sqrt(24)
se2
se2 = 0.17/sqrt(24/4)
se2
se2 = 0.17/sqrt(24)
se2
x=c( -0.0212499999999999, 0.20375, 0.07375, -0.32375,
0.12125, -0.01125, -0.00875000000000004 )
se(x)
sd(x)
sd(x)^2
sqrt(sd(x))
sqrt(sd(x)/4)
sd(x)/sqrt(4)
sd(x)
sd(x)^2
sd(x)^2/sqrt(7)
sd(x)^2/sqrt(4)
sd(x)/sqrt(4)
##Exploring the MOE data
library(data.table)
library(dplyr)
library(ggplot2)
####Load the data ####
setwd('~/Desktop/UBC/STAT450/Project/Stat450Stat550Moe/Data/')
data <- read.csv('Lavington_2015-2018.csv', header = T, stringsAsFactors = FALSE)
#new column names and replace empty values with NA
data$BAM.PM25 <- as.numeric(data$PM25_BAM..ug.m3.)
data$WIND.DIR <- as.numeric(data$WDIR_VECT_BAM..deg.)
data$WIND.SPEED <- as.numeric(data$WSPD_SCLR_BAM..m.s.)
data$EBAM.PM25 <- as.numeric(data$PM25_EBAM..ug.m3.)
colnames(data)[1] <- 'Date.Time'
#create a new df
df <- data[,c('Date.Time','EBAM.PM25','WIND.SPEED','WIND.DIR','BAM.PM25')]
df <- df[1:26928,] #last few rows had summary info
df$Date.Time <- as.POSIXct(df$Date.Time, format= "%Y-%m-%d %H:%M") #make column datetime object
#### Cleaning Date.Time column ####
na.idx <- which(is.na(df$Date.Time)) #anything with NA had formatting issue
for( i in (1:length(na.idx))){
idx <- na.idx[i]
date.before <- df$Date.Time[idx-1]
date.after <- df$Date.Time[idx+1]
if(is.na(date.after) | is.na(date.before)){
print("Error both rows before and after are NA")
print(i)
}
else if(date.before + 2*60*60 != date.after ){
print('Error, this rows time cannot be determined')
print(i)
}else{
date.missing <- date.before+ 1*60*60
df$Date.Time[idx] <- date.missing
}
}
head(df)
#get first and last dates of BAM recording
start.idx <- min(which(!is.na(df$BAM.PM25)))
start.idx
last.idx <- max(which(!is.na(df$BAM.PM25)))
last.idx
start.date <- df$Date.Time[start.idx]
end.date <- df$Date.Time[last.idx]
#### Getting Humidty Data ####
setwd('~/Desktop/UBC/STAT450/Project/Stat450Stat550Moe/Data/Vernon_Data/')
weather.data.files <- list.files(pattern= '.csv')
temp.files <- lapply(weather.data.files,fread,skip=14)
weather.data <- rbindlist(temp.files, fill = TRUE)
humdity.data <- weather.data[,c('Date/Time','Rel Hum (%)')]
head(humdity.data)
#Add date/time column
humdity.data$`Date/Time` <- as.POSIXct(humdity.data$`Date/Time`, format= "%Y-%m-%d %H:%M", tim)
#sort data
humdity.data <- humdity.data[order(`Date/Time`),]
#filter humidty data
humdity.data <- humdity.data %>%
filter(`Date/Time` >= start.date ) %>% filter(`Date/Time` <= end.date)
df <- df %>%
filter(Date.Time >= start.date) %>% filter(Date.Time <= end.date)
head(df)
head(humdity.data)
tail(df)
tail(humdity.data)
# Get the range of dates covered
# Clearly some dates are missing. Not an issue right now.
df$Date.Time[!df$Date.Time %in% humdity.data$`Date/Time`]
df$Date.Time
names(humdity.data)
#Join both dataframes
names(humdity.data)[1] <- 'Date.Time'
humdity.data
df.merged <- left_join(df, humdity.data, by=c("Date.Time"))
#Add date/time column
names(humdity.data)[1] <- 'Date.Time'
humdity.data$Date.Time <- as.POSIXct(humdity.data$Date.Time, format= "%Y-%m-%d %H:%M")
head(humdity.data)
#sort data
humdity.data <- humdity.data[order(`Date/Time`),]
#sort data
humdity.data <- humdity.data[order(Date.Time),]
#sort data
humdity.data <- humdity.data[order(`Date.Time`),]
#sort data
humdity.data <- humdity.data[order('Date.Time'),]
#filter humidty data
humdity.data <- humdity.data %>%
filter(`Date/Time` >= start.date ) %>% filter(`Date/Time` <= end.date)
#filter humidty data
humdity.data <- humdity.data %>%
filter(Date.Time >= start.date ) %>% filter(Date.Time <= end.date)
df <- df %>%
filter(Date.Time >= start.date) %>% filter(Date.Time <= end.date)
head(df)
head(humdity.data)
##Exploring the MOE data
library(data.table)
library(dplyr)
library(ggplot2)
####Load the data ####
setwd('~/Desktop/UBC/STAT450/Project/Stat450Stat550Moe/Data/')
data <- read.csv('Lavington_2015-2018.csv', header = T, stringsAsFactors = FALSE)
#new column names and replace empty values with NA
data$BAM.PM25 <- as.numeric(data$PM25_BAM..ug.m3.)
data$WIND.DIR <- as.numeric(data$WDIR_VECT_BAM..deg.)
data$WIND.SPEED <- as.numeric(data$WSPD_SCLR_BAM..m.s.)
data$EBAM.PM25 <- as.numeric(data$PM25_EBAM..ug.m3.)
colnames(data)[1] <- 'Date.Time'
#create a new df
df <- data[,c('Date.Time','EBAM.PM25','WIND.SPEED','WIND.DIR','BAM.PM25')]
df <- df[1:26928,] #last few rows had summary info
df$Date.Time <- as.POSIXct(df$Date.Time, format= "%Y-%m-%d %H:%M") #make column datetime object
#### Cleaning Date.Time column ####
na.idx <- which(is.na(df$Date.Time)) #anything with NA had formatting issue
for( i in (1:length(na.idx))){
idx <- na.idx[i]
date.before <- df$Date.Time[idx-1]
date.after <- df$Date.Time[idx+1]
if(is.na(date.after) | is.na(date.before)){
print("Error both rows before and after are NA")
print(i)
}
else if(date.before + 2*60*60 != date.after ){
print('Error, this rows time cannot be determined')
print(i)
}else{
date.missing <- date.before+ 1*60*60
df$Date.Time[idx] <- date.missing
}
}
#index of rows whose Date.Time could not be determined
error_arr <- c(126,491,856,1125)
df$Date.Time[error_arr[1]-1]
df$Date.Time[error_arr[1]]
df$Date.Time[error_arr[1]+1]
head(df)
#get first and last dates of BAM recording
start.idx <- min(which(!is.na(df$BAM.PM25)))
start.idx
last.idx <- max(which(!is.na(df$BAM.PM25)))
last.idx
start.date <- df$Date.Time[start.idx]
end.date <- df$Date.Time[last.idx]
#### Getting Humidty Data ####
setwd('~/Desktop/UBC/STAT450/Project/Stat450Stat550Moe/Data/Vernon_Data/')
weather.data.files <- list.files(pattern= '.csv')
temp.files <- lapply(weather.data.files,fread,skip=14)
weather.data <- rbindlist(temp.files, fill = TRUE)
humdity.data <- weather.data[,c('Date/Time','Rel Hum (%)')]
head(humdity.data)
#Add date/time column
names(humdity.data)[1] <- 'Date.Time'
humdity.data$Date.Time <- as.POSIXct(humdity.data$Date.Time, format= "%Y-%m-%d %H:%M")
head(humdity.data)
#sort data
humdity.data <- humdity.data[order('Date.Time'),]
#filter humidty data
humdity.data <- humdity.data %>%
filter(Date.Time >= start.date ) %>% filter(Date.Time <= end.date)
df <- df %>%
filter(Date.Time >= start.date) %>% filter(Date.Time <= end.date)
head(df)
head(humdity.data)
head(humdity.data)
#### Getting Humidty Data ####
setwd('~/Desktop/UBC/STAT450/Project/Stat450Stat550Moe/Data/Vernon_Data/')
weather.data.files <- list.files(pattern= '.csv')
temp.files <- lapply(weather.data.files,fread,skip=14)
weather.data <- rbindlist(temp.files, fill = TRUE)
humdity.data <- weather.data[,c('Date/Time','Rel Hum (%)')]
head(humdity.data)
#Add date/time column
names(humdity.data)[1] <- 'Date.Time'
humdity.data$Date.Time <- as.POSIXct(humdity.data$Date.Time, format= "%Y-%m-%d %H:%M")
head(humdity.data)
#sort data
humdity.data <- humdity.data[order('Date.Time'),]
head(humdity.data)
#sort data
humdity.data <- humdity.data[order(Date.Time),]
#### Getting Humidty Data ####
setwd('~/Desktop/UBC/STAT450/Project/Stat450Stat550Moe/Data/Vernon_Data/')
weather.data.files <- list.files(pattern= '.csv')
temp.files <- lapply(weather.data.files,fread,skip=14)
weather.data <- rbindlist(temp.files, fill = TRUE)
humdity.data <- weather.data[,c('Date/Time','Rel Hum (%)')]
head(humdity.data)
#Add date/time column
names(humdity.data)[1] <- 'Date.Time'
humdity.data$Date.Time <- as.POSIXct(humdity.data$Date.Time, format= "%Y-%m-%d %H:%M")
head(humdity.data)
#sort data
humdity.data <- humdity.data[order(Date.Time),]
head(humdity.data)
#filter humidty data
humdity.data <- humdity.data %>%
filter(Date.Time >= start.date ) %>% filter(Date.Time <= end.date)
df <- df %>%
filter(Date.Time >= start.date) %>% filter(Date.Time <= end.date)
head(df)
head(humdity.data)
tail(df)
tail(humdity.data)
# Get the range of dates covered
# Clearly some dates are missing. Not an issue right now.
df$Date.Time[!df$Date.Time %in% humdity.data$`Date/Time`]
df.merged <- left_join(df, humdity.data, by=c("Date.Time"))
head(df.merged)
head(humdity.data)
tail(df.merged)
tail(humdity.data)
low.humidty <- subset(df.merged, `Rel Hum (%)` <= 40)
high.humidty <- subset(df.merged, `Rel Hum (%)` > 40)
View(df.merged)
View(humdity.data)
View(low.humidty)
View(high.humidty)
nrow(high.humidty)
nrow(low.humidty)
2804/20255
boxplot(low.humidty$BAM.PM25, low.humidty$EBAM.PM25)
boxplot(high.humidty$BAM.PM25, high.humidty$EBAM.PM25)
boxplot(low.humidty$BAM.PM25, low.humidty$EBAM.PM25)
boxplot(high.humidty$BAM.PM25, high.humidty$EBAM.PM25)
boxplot(low.humidty$BAM.PM25, low.humidty$EBAM.PM25)
ebam.low <- mean(low.humidty$EBAM.PM25)
ebam.high <- mean(high.humidty$EBAM.PM25)
bam.low <- mean(high.humidty$BAM.PM25)
bam.high <- mean(high.humidty$BAM.PM25)
bam.low <- mean(low.humidty$BAM.PM25)
bam.high <- mean(high.humidty$BAM.PM25)
print(bam.low);print(bam.high);print(ebam.low);print(ebam.high)
?mean
ebam.low <- mean(low.humidty$EBAM.PM25, na.rm = TRUE)
ebam.high <- mean(high.humidty$EBAM.PM25, na.rm = TRUE)
bam.low <- mean(low.humidty$BAM.PM25, na.rm = TRUE)
bam.high <- mean(high.humidty$BAM.PM25, na.rm = TRUE)
print(bam.low);print(bam.high);print(ebam.low);print(ebam.high)
print(bam.low);print(ebam.low);print(bam.high);print(ebam.high)
mean(df.merged$EBAM.PM25,na.rm=TRUE)
mean(df.merged$BAM.PM25,na.rm=TRUE)
plot(low.humidty$EBAM.PM25)
hist(low.humidty$EBAM.PM25)
hist(low.humidty$BAM.PM25)
hist(low.humidty$EBAM.PM25)
hist(low.humidty$BAM.PM25)
hist(df.merged$EBAM.PM25)
hist(df.merged$BAM.PM25)
hist(df.merged$EBAM.PM25)
hist(df.merged$BAM.PM25)
box()
hist(df.merged$BAM.PM25, add= T)
hist(df.merged$EBAM.PM25)
hist(df.merged$BAM.PM25, add= T)
?hist()
hist(df.merged$EBAM.PM25, col='blue')
hist(df.merged$BAM.PM25, add= T, col='red')
box()
hist(df.merged$EBAM.PM25, col=rgb(0.1,0.1,0.1,0.5))
hist(df.merged$BAM.PM25, add= T, col=rgb(0.8,0.8,0.8,0.5))
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5))
hist(df.merged$BAM.PM25, col=rgb(0,0,1,0.5), add=T)
box()
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5),ylim=max(BAM.PM25))
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5),ylim=max(df.merged$BAM.PM25))
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5),ylim=c(min(df.merged$EBAM.PM25),max(df.merged$BAM.PM25))
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5),ylim=c(min(df.merged$EBAM.PM25),max(df.merged$BAM.PM25)))
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5),ylim=c(min(df.merged$EBAM.PM25),max(df.merged$BAM.PM25)))
max(df.merged$EBAM.PM25)
max(df.merged$EBAM.PM25,na.rm=TRUE)
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5),ylim=c(min(df.merged$EBAM.PM25,na.rm = TRUE),max(df.merged$BAM.PM25,na.rm=TRUE)))
hist(df.merged$BAM.PM25, col=rgb(0,0,1,0.5), add=T)
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5),ylim=c(min(df.merged$EBAM.PM25,na.rm = TRUE),max(df.merged$EBAM.PM25,na.rm=TRUE)))
max(df.merged$EBAM.PM25)
max(df.merged$EBAM.PM25,na.rm=TRUE)
min(df.merged$EBAM.PM25,na.rm=TRUE)
min(df.merged$BAM.PM25,na.rm=TRUE)
max(df.merged$BAM.PM25,na.rm=TRUE)
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5),ylim=c(-6,440))
hist(df.merged$BAM.PM25, col=rgb(0,0,1,0.5), add=T)
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5),ylim=c(-6,540))
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5))
hist(df.merged$BAM.PM25, col=rgb(0,0,1,0.5), add=T)
hist(df.merged$BAM.PM25, col=rgb(0,0,1,0.5))
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5), add=T)
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5))
hist(df.merged$BAM.PM25, col=rgb(0,0,1,0.5))
?hist
max(df.merged$EBAM.PM25)
max(df.merged$EBAM.PM25,na.rm = T)
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5), breaks=seq(0,11,l=15))
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5), breaks=seq(0,111,l=15))
seq(0,120,l=15)
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5), breaks=seq(0,120,l=15))
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5), breaks=seq(0,100,l=15))
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5), breaks=seq(-10,120,l=15))
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5), breaks=seq(-10,120,l=20))
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5), breaks=seq(-10,120,l=25))
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5), breaks=seq(-10,120,l=30))
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5), breaks=seq(-10,120,l=40))
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5), breaks=seq(-10,120,l=20))
hist(df.merged$BAM.PM25, col=rgb(0,0,1,0.5), breaks=seq(0,100,l=20))
hist(df.merged$BAM.PM25, col=rgb(0,0,1,0.5), breaks=seq(-10,200,l=20))
hist(df.merged$BAM.PM25, col=rgb(0,0,1,0.5), breaks=seq(-10,100,l=20))
hist(df.merged$BAM.PM25, col=rgb(0,0,1,0.5), breaks=seq(-10,120,l=20))
min(df.merged$BAM.PM25,na.rm = T)
max(df.merged$BAM.PM25,na.rm = T)
hist(df.merged$BAM.PM25, col=rgb(0,0,1,0.5), breaks=seq(0,425,l=20))
hist(df.merged$BAM.PM25, col=rgb(0,0,1,0.5), breaks=seq(0,425,l=25))
hist(df.merged$BAM.PM25, col=rgb(0,0,1,0.5), breaks=seq(0,425,l=50))
hist(df.merged$BAM.PM25, col=rgb(0,0,1,0.5), breaks=seq(0,425,l=30))
hist(df.merged$BAM.PM25, col=rgb(0,0,1,0.5), breaks=seq(0,425,l=40))
hist(df.merged$BAM.PM25, col=rgb(0,0,1,0.5), breaks=seq(0,425,l=100))
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5), breaks=seq(-10,120,l=20))
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5), breaks=seq(-10,120,l=100))
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5), breaks=seq(-10,120,l=200))
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5), breaks=seq(-10,120,l=300))
hist(df.merged$EBAM.PM25,  col=rgb(1,0,0,0.5), breaks=seq(-10,120,l=100))
hist(low.humidty$EBAM.PM25,col=rgb(1,0,0,0.5), breaks=seq(-10,120,l=15))
hist(low.humidty$EBAM.PM25,col=rgb(1,0,0,0.5), breaks=seq(-10,120,l=20))
15
hist(low.humidty$EBAM.PM25,col=rgb(1,0,0,0.5), breaks=seq(-10,120,l=15))
hist(low.humidty$BAM.PM25,col=rgb(0,0,1,0.5), breaks=seq(0,425,l=100))
hist(low.humidty$EBAM.PM25,col=rgb(1,0,0,0.5), breaks=seq(-10,120,l=15))
hist(low.humidty$BAM.PM25,col=rgb(0,0,1,0.5), breaks=seq(0,425,l=100))
hist(high.humidty$EBAM.PM25,col=rgb(1,0,0,0.5), breaks=seq(-10,120,l=15))
hist(high.humidty$BAM.PM25,col=rgb(0,0,1,0.5), breaks=seq(0,425,l=100))
?log
boxcox
?boxcox
#Histograms
hist(log(df.merged$EBAM.PM25),  col=rgb(1,0,0,0.5), breaks=seq(-10,120,l=100))
hist(log(df.merged$BAM.PM25), col=rgb(0,0,1,0.5), breaks=seq(0,425,l=100))
hist(log(df.merged$BAM.PM25), col=rgb(0,0,1,0.5), breaks=seq(0,425,l=100))
max(log(df.merged$EBAM.PM25), na.rm=T)
?logLik
?loh
?log
log(df.merged$EBAM.PM25, na.rm=T)
log(na.omit(df.merged$EBAM.PM25)
)
#Histograms
hist(log(na.omit(df.merged$EBAM.PM25)),  col=rgb(1,0,0,0.5))
hist(log(na.omit(df.merged$BAM.PM25)), col=rgb(0,0,1,0.5))
#Data has right skew -> Log transform
hist(log(na.omit(df.merged$EBAM.PM25)),  col=rgb(1,0,0,0.5))
hist(log(na.omit(df.merged$BAM.PM25)), col=rgb(0,0,1,0.5))
#Looks nicer
df.merged$LogBAM <- log(df$BAM.PM25)
df.merged$LogEBAM <- log(df$EBAM.PM25)
View(df.merged)
hist(df.merged$LogBAM)
hist(df.merged$EBAM.PM25)
hist(df.merged$LogEBAM)
hist(df.merged$LogBAM)
hist(df.merged$LogBAM)
low.humidty <- subset(df.merged, `Rel Hum (%)` <= 40)
high.humidty <- subset(df.merged, `Rel Hum (%)` > 40)
hist(low.humidty$EBAM.PM25)
hist(high.humidty$EBAM.PM25)
hist(low.humidty$EBAM.PM25)
hist(high.humidty$EBAM.PM25)
hist(low.humidty$EBAM.PM25)
hist(low.humidty$EBAM.PM25)
hist(high.humidty$EBAM.PM25)
summarise(df.merged)
df.merged
summary(df.merged)
summary(low.humidty)
summary(high.humidty)
plot(df.merged$`Rel Hum (%)`, df.merged$EBAM.PM25)
plot(df.merged$`Rel Hum (%)`, df.merged$BAM.PM25)
plot(low.humidty$`Rel Hum (%)`, low.humidty$EBAM.PM25)
plot(high.humidty$`Rel Hum (%)`, high.humidty$EBAM.PM25)
plot(low.humidty$`Rel Hum (%)`, low.humidty$EBAM.PM25)
plot(high.humidty$`Rel Hum (%)`, high.humidty$EBAM.PM25)
plot(df.merged$`Rel Hum (%)`,df.merged$EBAM.PM25)
?pch
plot(df.merged$`Rel Hum (%)`,df.merged$EBAM.PM25, col='red', pch=16)
plot(df.merged$`Rel Hum (%)`,df.merged$EBAM.PM25, col='blue', pch=18, add=T)
plot(df.merged$`Rel Hum (%)`,df.merged$EBAM.PM25, col='red', pch=16)
plot(df.merged$`Rel Hum (%)`,df.merged$BAM.PM25, col='blue', pch=18, add=T)
plot(df.merged$`Rel Hum (%)`,df.merged$BAM.PM25, col='blue', pch=18, add=T)
plot(df.merged$`Rel Hum (%)`,df.merged$EBAM.PM25, col='red', pch=16)
plot(df.merged$`Rel Hum (%)`,df.merged$BAM.PM25, col='blue', pch=18)
plot(df.merged$`Rel Hum (%)`,df.merged$EBAM.PM25, col='red', pch=16)
plot(df.merged$`Rel Hum (%)`,df.merged$BAM.PM25, col='blue', pch=18)
###TODO
## - For given level of humidty what is the ebam reading
##
##
df.test$diff <- df.merged$BAM.PM25 - df.merged$EBAM.PM25
###TODO
## - For given level of humidty what is the ebam reading
##
##
df.merged$diff <- df.merged$BAM.PM25 - df.merged$EBAM.PM25
plot(df.merged$`Rel Hum (%)`, df.merged$diff)
###TODO
## - For given level of humidty what is the ebam reading
##
##
df.merged$diff <- log(df.merged$BAM.PM25 - df.merged$EBAM.PM25)
daily.data <- df.merged %>% group_by(day=floor_date(Date.Time)) %>%
summarize(avg=mean(BAM.PM25))
plot(df.merged$Date.Time, df.merged$diff)
View(df.merged)
log(0)
hist(df.merged$diff)
very.high.humidity <-  subset(df.merged, `Rel Hum (%)` > 95)
nrow(very.high.humidity)
nrow(low.humidty)
mean(very.high.humidity$diff)
mean(very.high.humidity$diff, na.rm=T)
mean(very.high.humidity$diff, na.rm=TRUE)
very.high.humidity$diff
max(very.high.humidity$diff)
max(very.high.humidity$diff,na.rm=T)
min(very.high.humidity$diff,na.rm=T)
min(very.high.humidity$diff,na.rm=T)
mean(very.high.humidity$EBAM.PM25,na.rm=T)
mean(low.humidty$BAM.PM25, na.rm = T)
mean(very.high.humidity$EBAM.PM25,na.rm=T)
mean(very.high.humidity$BAM.PM25,na.rm=T)
t.test(very.high.humidity$BAM.PM25,very.high.humidity$EBAM.PM25, na.rm=T)
t.test(low.humidity$BAM.PM25,low.humidity$EBAM.PM25, na.rm=T)
t.test(low.humidty$BAM.PM25,low.humidty$EBAM.PM25, na.rm=T)
